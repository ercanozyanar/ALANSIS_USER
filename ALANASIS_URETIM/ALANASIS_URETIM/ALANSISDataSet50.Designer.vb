'------------------------------------------------------------------------------
' <auto-generated>
'     Bu kod araç tarafından oluşturuldu.
'     Çalışma Zamanı Sürümü:4.0.30319.42000
'
'     Bu dosyada yapılacak değişiklikler yanlış davranışa neden olabilir ve
'     kod yeniden oluşturulursa kaybolur.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ALANSISDataSet50"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ALANSISDataSet50
    Inherits Global.System.Data.DataSet
    
    Private tableEO_ALANSIS_ERIKURETIMRAPOR As EO_ALANSIS_ERIKURETIMRAPORDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("EO_ALANSIS_ERIKURETIMRAPOR")) Is Nothing) Then
                MyBase.Tables.Add(New EO_ALANSIS_ERIKURETIMRAPORDataTable(ds.Tables("EO_ALANSIS_ERIKURETIMRAPOR")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property EO_ALANSIS_ERIKURETIMRAPOR() As EO_ALANSIS_ERIKURETIMRAPORDataTable
        Get
            Return Me.tableEO_ALANSIS_ERIKURETIMRAPOR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ALANSISDataSet50 = CType(MyBase.Clone,ALANSISDataSet50)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("EO_ALANSIS_ERIKURETIMRAPOR")) Is Nothing) Then
                MyBase.Tables.Add(New EO_ALANSIS_ERIKURETIMRAPORDataTable(ds.Tables("EO_ALANSIS_ERIKURETIMRAPOR")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableEO_ALANSIS_ERIKURETIMRAPOR = CType(MyBase.Tables("EO_ALANSIS_ERIKURETIMRAPOR"),EO_ALANSIS_ERIKURETIMRAPORDataTable)
        If (initTable = true) Then
            If (Not (Me.tableEO_ALANSIS_ERIKURETIMRAPOR) Is Nothing) Then
                Me.tableEO_ALANSIS_ERIKURETIMRAPOR.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "ALANSISDataSet50"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ALANSISDataSet50.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableEO_ALANSIS_ERIKURETIMRAPOR = New EO_ALANSIS_ERIKURETIMRAPORDataTable()
        MyBase.Tables.Add(Me.tableEO_ALANSIS_ERIKURETIMRAPOR)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeEO_ALANSIS_ERIKURETIMRAPOR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ALANSISDataSet50 = New ALANSISDataSet50()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub EO_ALANSIS_ERIKURETIMRAPORRowChangeEventHandler(ByVal sender As Object, ByVal e As EO_ALANSIS_ERIKURETIMRAPORRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class EO_ALANSIS_ERIKURETIMRAPORDataTable
        Inherits Global.System.Data.TypedTableBase(Of EO_ALANSIS_ERIKURETIMRAPORRow)
        
        Private columnSERI As Global.System.Data.DataColumn
        
        Private columnBOLGE As Global.System.Data.DataColumn
        
        Private columnTARIH As Global.System.Data.DataColumn
        
        Private columnPARTINO As Global.System.Data.DataColumn
        
        Private columnBRUT As Global.System.Data.DataColumn
        
        Private columnDARA As Global.System.Data.DataColumn
        
        Private columnMIKTAR As Global.System.Data.DataColumn
        
        Private columnEBAT As Global.System.Data.DataColumn
        
        Private columnISLEM As Global.System.Data.DataColumn
        
        Private columnSTOK_KODU As Global.System.Data.DataColumn
        
        Private columnERIK_ISLEM As Global.System.Data.DataColumn
        
        Private columnKALINTI As Global.System.Data.DataColumn
        
        Private columnTIP As Global.System.Data.DataColumn
        
        Private columnURETIM_TIPI As Global.System.Data.DataColumn
        
        Private columnACIKLAMA As Global.System.Data.DataColumn
        
        Private columnETIKET_TIPI As Global.System.Data.DataColumn
        
        Private columnETIKET_MIKTAR As Global.System.Data.DataColumn
        
        Private columnNEMBEZI_TIPI As Global.System.Data.DataColumn
        
        Private columnNEMBEZI_MIKTAR As Global.System.Data.DataColumn
        
        Private columnKARTONKUTU_TIPI As Global.System.Data.DataColumn
        
        Private columnKARTONKUTU_MIKTAR As Global.System.Data.DataColumn
        
        Private columnKOSEBENT_TIPI As Global.System.Data.DataColumn
        
        Private columnKOSEBENT_MIKTAR As Global.System.Data.DataColumn
        
        Private columnPOSET_TIPI As Global.System.Data.DataColumn
        
        Private columnPOSET_MIKTAR As Global.System.Data.DataColumn
        
        Private columnPALET_TIPI As Global.System.Data.DataColumn
        
        Private columnPALET_MIKTAR As Global.System.Data.DataColumn
        
        Private columnSAPKA_TIPI As Global.System.Data.DataColumn
        
        Private columnSAPKA_MIKTAR As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "EO_ALANSIS_ERIKURETIMRAPOR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SERIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BOLGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBOLGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TARIHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTARIH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PARTINOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARTINO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BRUTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRUT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DARAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDARA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MIKTARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMIKTAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EBATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEBAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ISLEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnISLEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property STOK_KODUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOK_KODU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ERIK_ISLEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnERIK_ISLEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KALINTIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKALINTI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TIPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property URETIM_TIPIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnURETIM_TIPI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ACIKLAMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACIKLAMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ETIKET_TIPIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnETIKET_TIPI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ETIKET_MIKTARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnETIKET_MIKTAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NEMBEZI_TIPIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNEMBEZI_TIPI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NEMBEZI_MIKTARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNEMBEZI_MIKTAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KARTONKUTU_TIPIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKARTONKUTU_TIPI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KARTONKUTU_MIKTARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKARTONKUTU_MIKTAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KOSEBENT_TIPIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKOSEBENT_TIPI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property KOSEBENT_MIKTARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKOSEBENT_MIKTAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property POSET_TIPIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSET_TIPI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property POSET_MIKTARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSET_MIKTAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PALET_TIPIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPALET_TIPI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property PALET_MIKTARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPALET_MIKTAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SAPKA_TIPIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAPKA_TIPI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SAPKA_MIKTARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAPKA_MIKTAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As EO_ALANSIS_ERIKURETIMRAPORRow
            Get
                Return CType(Me.Rows(index),EO_ALANSIS_ERIKURETIMRAPORRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event EO_ALANSIS_ERIKURETIMRAPORRowChanging As EO_ALANSIS_ERIKURETIMRAPORRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event EO_ALANSIS_ERIKURETIMRAPORRowChanged As EO_ALANSIS_ERIKURETIMRAPORRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event EO_ALANSIS_ERIKURETIMRAPORRowDeleting As EO_ALANSIS_ERIKURETIMRAPORRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event EO_ALANSIS_ERIKURETIMRAPORRowDeleted As EO_ALANSIS_ERIKURETIMRAPORRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddEO_ALANSIS_ERIKURETIMRAPORRow(ByVal row As EO_ALANSIS_ERIKURETIMRAPORRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddEO_ALANSIS_ERIKURETIMRAPORRow( _
                    ByVal SERI As String,  _
                    ByVal BOLGE As String,  _
                    ByVal TARIH As String,  _
                    ByVal PARTINO As String,  _
                    ByVal BRUT As Integer,  _
                    ByVal DARA As Integer,  _
                    ByVal MIKTAR As Integer,  _
                    ByVal EBAT As String,  _
                    ByVal ISLEM As String,  _
                    ByVal STOK_KODU As String,  _
                    ByVal ERIK_ISLEM As String,  _
                    ByVal KALINTI As String,  _
                    ByVal TIP As String,  _
                    ByVal URETIM_TIPI As String,  _
                    ByVal ACIKLAMA As String,  _
                    ByVal ETIKET_TIPI As String,  _
                    ByVal ETIKET_MIKTAR As Decimal,  _
                    ByVal NEMBEZI_TIPI As String,  _
                    ByVal NEMBEZI_MIKTAR As Decimal,  _
                    ByVal KARTONKUTU_TIPI As String,  _
                    ByVal KARTONKUTU_MIKTAR As Decimal,  _
                    ByVal KOSEBENT_TIPI As String,  _
                    ByVal KOSEBENT_MIKTAR As Decimal,  _
                    ByVal POSET_TIPI As String,  _
                    ByVal POSET_MIKTAR As Decimal,  _
                    ByVal PALET_TIPI As String,  _
                    ByVal PALET_MIKTAR As Decimal,  _
                    ByVal SAPKA_TIPI As String,  _
                    ByVal SAPKA_MIKTAR As Decimal) As EO_ALANSIS_ERIKURETIMRAPORRow
            Dim rowEO_ALANSIS_ERIKURETIMRAPORRow As EO_ALANSIS_ERIKURETIMRAPORRow = CType(Me.NewRow,EO_ALANSIS_ERIKURETIMRAPORRow)
            Dim columnValuesArray() As Object = New Object() {SERI, BOLGE, TARIH, PARTINO, BRUT, DARA, MIKTAR, EBAT, ISLEM, STOK_KODU, ERIK_ISLEM, KALINTI, TIP, URETIM_TIPI, ACIKLAMA, ETIKET_TIPI, ETIKET_MIKTAR, NEMBEZI_TIPI, NEMBEZI_MIKTAR, KARTONKUTU_TIPI, KARTONKUTU_MIKTAR, KOSEBENT_TIPI, KOSEBENT_MIKTAR, POSET_TIPI, POSET_MIKTAR, PALET_TIPI, PALET_MIKTAR, SAPKA_TIPI, SAPKA_MIKTAR}
            rowEO_ALANSIS_ERIKURETIMRAPORRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEO_ALANSIS_ERIKURETIMRAPORRow)
            Return rowEO_ALANSIS_ERIKURETIMRAPORRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As EO_ALANSIS_ERIKURETIMRAPORDataTable = CType(MyBase.Clone,EO_ALANSIS_ERIKURETIMRAPORDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New EO_ALANSIS_ERIKURETIMRAPORDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSERI = MyBase.Columns("SERI")
            Me.columnBOLGE = MyBase.Columns("BOLGE")
            Me.columnTARIH = MyBase.Columns("TARIH")
            Me.columnPARTINO = MyBase.Columns("PARTINO")
            Me.columnBRUT = MyBase.Columns("BRUT")
            Me.columnDARA = MyBase.Columns("DARA")
            Me.columnMIKTAR = MyBase.Columns("MIKTAR")
            Me.columnEBAT = MyBase.Columns("EBAT")
            Me.columnISLEM = MyBase.Columns("ISLEM")
            Me.columnSTOK_KODU = MyBase.Columns("STOK_KODU")
            Me.columnERIK_ISLEM = MyBase.Columns("ERIK_ISLEM")
            Me.columnKALINTI = MyBase.Columns("KALINTI")
            Me.columnTIP = MyBase.Columns("TIP")
            Me.columnURETIM_TIPI = MyBase.Columns("URETIM_TIPI")
            Me.columnACIKLAMA = MyBase.Columns("ACIKLAMA")
            Me.columnETIKET_TIPI = MyBase.Columns("ETIKET_TIPI")
            Me.columnETIKET_MIKTAR = MyBase.Columns("ETIKET_MIKTAR")
            Me.columnNEMBEZI_TIPI = MyBase.Columns("NEMBEZI_TIPI")
            Me.columnNEMBEZI_MIKTAR = MyBase.Columns("NEMBEZI_MIKTAR")
            Me.columnKARTONKUTU_TIPI = MyBase.Columns("KARTONKUTU_TIPI")
            Me.columnKARTONKUTU_MIKTAR = MyBase.Columns("KARTONKUTU_MIKTAR")
            Me.columnKOSEBENT_TIPI = MyBase.Columns("KOSEBENT_TIPI")
            Me.columnKOSEBENT_MIKTAR = MyBase.Columns("KOSEBENT_MIKTAR")
            Me.columnPOSET_TIPI = MyBase.Columns("POSET_TIPI")
            Me.columnPOSET_MIKTAR = MyBase.Columns("POSET_MIKTAR")
            Me.columnPALET_TIPI = MyBase.Columns("PALET_TIPI")
            Me.columnPALET_MIKTAR = MyBase.Columns("PALET_MIKTAR")
            Me.columnSAPKA_TIPI = MyBase.Columns("SAPKA_TIPI")
            Me.columnSAPKA_MIKTAR = MyBase.Columns("SAPKA_MIKTAR")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSERI = New Global.System.Data.DataColumn("SERI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERI)
            Me.columnBOLGE = New Global.System.Data.DataColumn("BOLGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBOLGE)
            Me.columnTARIH = New Global.System.Data.DataColumn("TARIH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTARIH)
            Me.columnPARTINO = New Global.System.Data.DataColumn("PARTINO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARTINO)
            Me.columnBRUT = New Global.System.Data.DataColumn("BRUT", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRUT)
            Me.columnDARA = New Global.System.Data.DataColumn("DARA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDARA)
            Me.columnMIKTAR = New Global.System.Data.DataColumn("MIKTAR", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMIKTAR)
            Me.columnEBAT = New Global.System.Data.DataColumn("EBAT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEBAT)
            Me.columnISLEM = New Global.System.Data.DataColumn("ISLEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISLEM)
            Me.columnSTOK_KODU = New Global.System.Data.DataColumn("STOK_KODU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOK_KODU)
            Me.columnERIK_ISLEM = New Global.System.Data.DataColumn("ERIK_ISLEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnERIK_ISLEM)
            Me.columnKALINTI = New Global.System.Data.DataColumn("KALINTI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKALINTI)
            Me.columnTIP = New Global.System.Data.DataColumn("TIP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIP)
            Me.columnURETIM_TIPI = New Global.System.Data.DataColumn("URETIM_TIPI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnURETIM_TIPI)
            Me.columnACIKLAMA = New Global.System.Data.DataColumn("ACIKLAMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACIKLAMA)
            Me.columnETIKET_TIPI = New Global.System.Data.DataColumn("ETIKET_TIPI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnETIKET_TIPI)
            Me.columnETIKET_MIKTAR = New Global.System.Data.DataColumn("ETIKET_MIKTAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnETIKET_MIKTAR)
            Me.columnNEMBEZI_TIPI = New Global.System.Data.DataColumn("NEMBEZI_TIPI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNEMBEZI_TIPI)
            Me.columnNEMBEZI_MIKTAR = New Global.System.Data.DataColumn("NEMBEZI_MIKTAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNEMBEZI_MIKTAR)
            Me.columnKARTONKUTU_TIPI = New Global.System.Data.DataColumn("KARTONKUTU_TIPI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKARTONKUTU_TIPI)
            Me.columnKARTONKUTU_MIKTAR = New Global.System.Data.DataColumn("KARTONKUTU_MIKTAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKARTONKUTU_MIKTAR)
            Me.columnKOSEBENT_TIPI = New Global.System.Data.DataColumn("KOSEBENT_TIPI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKOSEBENT_TIPI)
            Me.columnKOSEBENT_MIKTAR = New Global.System.Data.DataColumn("KOSEBENT_MIKTAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKOSEBENT_MIKTAR)
            Me.columnPOSET_TIPI = New Global.System.Data.DataColumn("POSET_TIPI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSET_TIPI)
            Me.columnPOSET_MIKTAR = New Global.System.Data.DataColumn("POSET_MIKTAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSET_MIKTAR)
            Me.columnPALET_TIPI = New Global.System.Data.DataColumn("PALET_TIPI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPALET_TIPI)
            Me.columnPALET_MIKTAR = New Global.System.Data.DataColumn("PALET_MIKTAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPALET_MIKTAR)
            Me.columnSAPKA_TIPI = New Global.System.Data.DataColumn("SAPKA_TIPI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAPKA_TIPI)
            Me.columnSAPKA_MIKTAR = New Global.System.Data.DataColumn("SAPKA_MIKTAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAPKA_MIKTAR)
            Me.columnSERI.MaxLength = 2147483647
            Me.columnBOLGE.MaxLength = 2147483647
            Me.columnTARIH.MaxLength = 2147483647
            Me.columnPARTINO.MaxLength = 2147483647
            Me.columnEBAT.MaxLength = 2147483647
            Me.columnISLEM.MaxLength = 2147483647
            Me.columnSTOK_KODU.MaxLength = 2147483647
            Me.columnERIK_ISLEM.MaxLength = 2147483647
            Me.columnKALINTI.MaxLength = 2147483647
            Me.columnTIP.MaxLength = 2147483647
            Me.columnURETIM_TIPI.MaxLength = 2147483647
            Me.columnACIKLAMA.MaxLength = 2147483647
            Me.columnETIKET_TIPI.ReadOnly = true
            Me.columnETIKET_TIPI.MaxLength = 2147483647
            Me.columnETIKET_MIKTAR.ReadOnly = true
            Me.columnNEMBEZI_TIPI.ReadOnly = true
            Me.columnNEMBEZI_TIPI.MaxLength = 2147483647
            Me.columnNEMBEZI_MIKTAR.ReadOnly = true
            Me.columnKARTONKUTU_TIPI.ReadOnly = true
            Me.columnKARTONKUTU_TIPI.MaxLength = 2147483647
            Me.columnKARTONKUTU_MIKTAR.ReadOnly = true
            Me.columnKOSEBENT_TIPI.ReadOnly = true
            Me.columnKOSEBENT_TIPI.MaxLength = 2147483647
            Me.columnKOSEBENT_MIKTAR.ReadOnly = true
            Me.columnPOSET_TIPI.ReadOnly = true
            Me.columnPOSET_TIPI.MaxLength = 2147483647
            Me.columnPOSET_MIKTAR.ReadOnly = true
            Me.columnPALET_TIPI.ReadOnly = true
            Me.columnPALET_TIPI.MaxLength = 2147483647
            Me.columnPALET_MIKTAR.ReadOnly = true
            Me.columnSAPKA_TIPI.ReadOnly = true
            Me.columnSAPKA_TIPI.MaxLength = 2147483647
            Me.columnSAPKA_MIKTAR.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewEO_ALANSIS_ERIKURETIMRAPORRow() As EO_ALANSIS_ERIKURETIMRAPORRow
            Return CType(Me.NewRow,EO_ALANSIS_ERIKURETIMRAPORRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New EO_ALANSIS_ERIKURETIMRAPORRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(EO_ALANSIS_ERIKURETIMRAPORRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.EO_ALANSIS_ERIKURETIMRAPORRowChangedEvent) Is Nothing) Then
                RaiseEvent EO_ALANSIS_ERIKURETIMRAPORRowChanged(Me, New EO_ALANSIS_ERIKURETIMRAPORRowChangeEvent(CType(e.Row,EO_ALANSIS_ERIKURETIMRAPORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.EO_ALANSIS_ERIKURETIMRAPORRowChangingEvent) Is Nothing) Then
                RaiseEvent EO_ALANSIS_ERIKURETIMRAPORRowChanging(Me, New EO_ALANSIS_ERIKURETIMRAPORRowChangeEvent(CType(e.Row,EO_ALANSIS_ERIKURETIMRAPORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.EO_ALANSIS_ERIKURETIMRAPORRowDeletedEvent) Is Nothing) Then
                RaiseEvent EO_ALANSIS_ERIKURETIMRAPORRowDeleted(Me, New EO_ALANSIS_ERIKURETIMRAPORRowChangeEvent(CType(e.Row,EO_ALANSIS_ERIKURETIMRAPORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.EO_ALANSIS_ERIKURETIMRAPORRowDeletingEvent) Is Nothing) Then
                RaiseEvent EO_ALANSIS_ERIKURETIMRAPORRowDeleting(Me, New EO_ALANSIS_ERIKURETIMRAPORRowChangeEvent(CType(e.Row,EO_ALANSIS_ERIKURETIMRAPORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveEO_ALANSIS_ERIKURETIMRAPORRow(ByVal row As EO_ALANSIS_ERIKURETIMRAPORRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ALANSISDataSet50 = New ALANSISDataSet50()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "EO_ALANSIS_ERIKURETIMRAPORDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class EO_ALANSIS_ERIKURETIMRAPORRow
        Inherits Global.System.Data.DataRow
        
        Private tableEO_ALANSIS_ERIKURETIMRAPOR As EO_ALANSIS_ERIKURETIMRAPORDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEO_ALANSIS_ERIKURETIMRAPOR = CType(Me.Table,EO_ALANSIS_ERIKURETIMRAPORDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SERI() As String
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.SERIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'SERI' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.SERIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BOLGE() As String
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.BOLGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'BOLGE' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.BOLGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TARIH() As String
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.TARIHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'TARIH' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.TARIHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PARTINO() As String
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.PARTINOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'PARTINO' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.PARTINOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BRUT() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.BRUTColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'BRUT' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.BRUTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DARA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.DARAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'DARA' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.DARAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MIKTAR() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.MIKTARColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'MIKTAR' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.MIKTARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EBAT() As String
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.EBATColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'EBAT' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.EBATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ISLEM() As String
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.ISLEMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'ISLEM' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.ISLEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property STOK_KODU() As String
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.STOK_KODUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'STOK_KODU' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.STOK_KODUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ERIK_ISLEM() As String
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.ERIK_ISLEMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'ERIK_ISLEM' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.ERIK_ISLEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KALINTI() As String
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.KALINTIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'KALINTI' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.KALINTIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TIP() As String
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.TIPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'TIP' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.TIPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property URETIM_TIPI() As String
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.URETIM_TIPIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'URETIM_TIPI' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.URETIM_TIPIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ACIKLAMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.ACIKLAMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'ACIKLAMA' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.ACIKLAMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ETIKET_TIPI() As String
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.ETIKET_TIPIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'ETIKET_TIPI' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.ETIKET_TIPIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ETIKET_MIKTAR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.ETIKET_MIKTARColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'ETIKET_MIKTAR' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.ETIKET_MIKTARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NEMBEZI_TIPI() As String
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.NEMBEZI_TIPIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'NEMBEZI_TIPI' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.NEMBEZI_TIPIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NEMBEZI_MIKTAR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.NEMBEZI_MIKTARColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'NEMBEZI_MIKTAR' sütunun değeri DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.NEMBEZI_MIKTARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KARTONKUTU_TIPI() As String
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.KARTONKUTU_TIPIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'KARTONKUTU_TIPI' sütunun değeri DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.KARTONKUTU_TIPIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KARTONKUTU_MIKTAR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.KARTONKUTU_MIKTARColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'KARTONKUTU_MIKTAR' sütunun değeri DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.KARTONKUTU_MIKTARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KOSEBENT_TIPI() As String
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.KOSEBENT_TIPIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'KOSEBENT_TIPI' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.KOSEBENT_TIPIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property KOSEBENT_MIKTAR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.KOSEBENT_MIKTARColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'KOSEBENT_MIKTAR' sütunun değeri DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.KOSEBENT_MIKTARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property POSET_TIPI() As String
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.POSET_TIPIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'POSET_TIPI' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.POSET_TIPIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property POSET_MIKTAR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.POSET_MIKTARColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'POSET_MIKTAR' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.POSET_MIKTARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PALET_TIPI() As String
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.PALET_TIPIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'PALET_TIPI' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.PALET_TIPIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property PALET_MIKTAR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.PALET_MIKTARColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'PALET_MIKTAR' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.PALET_MIKTARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SAPKA_TIPI() As String
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.SAPKA_TIPIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'SAPKA_TIPI' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.SAPKA_TIPIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SAPKA_MIKTAR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.SAPKA_MIKTARColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("'EO_ALANSIS_ERIKURETIMRAPOR' tablosundaki 'SAPKA_MIKTAR' sütunun değeri DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.SAPKA_MIKTARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSERINull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.SERIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSERINull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.SERIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBOLGENull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.BOLGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBOLGENull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.BOLGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTARIHNull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.TARIHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTARIHNull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.TARIHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPARTINONull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.PARTINOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPARTINONull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.PARTINOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBRUTNull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.BRUTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBRUTNull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.BRUTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDARANull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.DARAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDARANull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.DARAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMIKTARNull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.MIKTARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMIKTARNull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.MIKTARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEBATNull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.EBATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEBATNull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.EBATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsISLEMNull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.ISLEMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetISLEMNull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.ISLEMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSTOK_KODUNull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.STOK_KODUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSTOK_KODUNull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.STOK_KODUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsERIK_ISLEMNull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.ERIK_ISLEMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetERIK_ISLEMNull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.ERIK_ISLEMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsKALINTINull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.KALINTIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetKALINTINull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.KALINTIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTIPNull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.TIPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTIPNull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.TIPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsURETIM_TIPINull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.URETIM_TIPIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetURETIM_TIPINull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.URETIM_TIPIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsACIKLAMANull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.ACIKLAMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetACIKLAMANull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.ACIKLAMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsETIKET_TIPINull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.ETIKET_TIPIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetETIKET_TIPINull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.ETIKET_TIPIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsETIKET_MIKTARNull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.ETIKET_MIKTARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetETIKET_MIKTARNull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.ETIKET_MIKTARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNEMBEZI_TIPINull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.NEMBEZI_TIPIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNEMBEZI_TIPINull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.NEMBEZI_TIPIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNEMBEZI_MIKTARNull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.NEMBEZI_MIKTARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNEMBEZI_MIKTARNull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.NEMBEZI_MIKTARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsKARTONKUTU_TIPINull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.KARTONKUTU_TIPIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetKARTONKUTU_TIPINull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.KARTONKUTU_TIPIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsKARTONKUTU_MIKTARNull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.KARTONKUTU_MIKTARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetKARTONKUTU_MIKTARNull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.KARTONKUTU_MIKTARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsKOSEBENT_TIPINull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.KOSEBENT_TIPIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetKOSEBENT_TIPINull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.KOSEBENT_TIPIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsKOSEBENT_MIKTARNull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.KOSEBENT_MIKTARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetKOSEBENT_MIKTARNull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.KOSEBENT_MIKTARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPOSET_TIPINull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.POSET_TIPIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPOSET_TIPINull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.POSET_TIPIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPOSET_MIKTARNull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.POSET_MIKTARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPOSET_MIKTARNull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.POSET_MIKTARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPALET_TIPINull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.PALET_TIPIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPALET_TIPINull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.PALET_TIPIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsPALET_MIKTARNull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.PALET_MIKTARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetPALET_MIKTARNull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.PALET_MIKTARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSAPKA_TIPINull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.SAPKA_TIPIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSAPKA_TIPINull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.SAPKA_TIPIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSAPKA_MIKTARNull() As Boolean
            Return Me.IsNull(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.SAPKA_MIKTARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSAPKA_MIKTARNull()
            Me(Me.tableEO_ALANSIS_ERIKURETIMRAPOR.SAPKA_MIKTARColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class EO_ALANSIS_ERIKURETIMRAPORRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As EO_ALANSIS_ERIKURETIMRAPORRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As EO_ALANSIS_ERIKURETIMRAPORRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As EO_ALANSIS_ERIKURETIMRAPORRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace ALANSISDataSet50TableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class EO_ALANSIS_ERIKURETIMRAPORTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "EO_ALANSIS_ERIKURETIMRAPOR"
            tableMapping.ColumnMappings.Add("SERI", "SERI")
            tableMapping.ColumnMappings.Add("BOLGE", "BOLGE")
            tableMapping.ColumnMappings.Add("TARIH", "TARIH")
            tableMapping.ColumnMappings.Add("PARTINO", "PARTINO")
            tableMapping.ColumnMappings.Add("BRUT", "BRUT")
            tableMapping.ColumnMappings.Add("DARA", "DARA")
            tableMapping.ColumnMappings.Add("MIKTAR", "MIKTAR")
            tableMapping.ColumnMappings.Add("EBAT", "EBAT")
            tableMapping.ColumnMappings.Add("ISLEM", "ISLEM")
            tableMapping.ColumnMappings.Add("STOK_KODU", "STOK_KODU")
            tableMapping.ColumnMappings.Add("ERIK_ISLEM", "ERIK_ISLEM")
            tableMapping.ColumnMappings.Add("KALINTI", "KALINTI")
            tableMapping.ColumnMappings.Add("TIP", "TIP")
            tableMapping.ColumnMappings.Add("URETIM_TIPI", "URETIM_TIPI")
            tableMapping.ColumnMappings.Add("ACIKLAMA", "ACIKLAMA")
            tableMapping.ColumnMappings.Add("ETIKET_TIPI", "ETIKET_TIPI")
            tableMapping.ColumnMappings.Add("ETIKET_MIKTAR", "ETIKET_MIKTAR")
            tableMapping.ColumnMappings.Add("NEMBEZI_TIPI", "NEMBEZI_TIPI")
            tableMapping.ColumnMappings.Add("NEMBEZI_MIKTAR", "NEMBEZI_MIKTAR")
            tableMapping.ColumnMappings.Add("KARTONKUTU_TIPI", "KARTONKUTU_TIPI")
            tableMapping.ColumnMappings.Add("KARTONKUTU_MIKTAR", "KARTONKUTU_MIKTAR")
            tableMapping.ColumnMappings.Add("KOSEBENT_TIPI", "KOSEBENT_TIPI")
            tableMapping.ColumnMappings.Add("KOSEBENT_MIKTAR", "KOSEBENT_MIKTAR")
            tableMapping.ColumnMappings.Add("POSET_TIPI", "POSET_TIPI")
            tableMapping.ColumnMappings.Add("POSET_MIKTAR", "POSET_MIKTAR")
            tableMapping.ColumnMappings.Add("PALET_TIPI", "PALET_TIPI")
            tableMapping.ColumnMappings.Add("PALET_MIKTAR", "PALET_MIKTAR")
            tableMapping.ColumnMappings.Add("SAPKA_TIPI", "SAPKA_TIPI")
            tableMapping.ColumnMappings.Add("SAPKA_MIKTAR", "SAPKA_MIKTAR")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.WindowsApplication1.My.MySettings.Default.ALANSISConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SERI, BOLGE, TARIH, PARTINO, BRUT, DARA, MIKTAR, EBAT, ISLEM, STOK_KODU, E"& _ 
                "RIK_ISLEM, KALINTI, TIP, URETIM_TIPI, ACIKLAMA, ETIKET_TIPI, ETIKET_MIKTAR, NEMB"& _ 
                "EZI_TIPI, NEMBEZI_MIKTAR, KARTONKUTU_TIPI, KARTONKUTU_MIKTAR, KOSEBENT_TIPI, KOS"& _ 
                "EBENT_MIKTAR, POSET_TIPI, POSET_MIKTAR, PALET_TIPI, PALET_MIKTAR, SAPKA_TIPI, SA"& _ 
                "PKA_MIKTAR FROM dbo.EO_ALANSIS_ERIKURETIMRAPOR"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As ALANSISDataSet50.EO_ALANSIS_ERIKURETIMRAPORDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As ALANSISDataSet50.EO_ALANSIS_ERIKURETIMRAPORDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As ALANSISDataSet50.EO_ALANSIS_ERIKURETIMRAPORDataTable = New ALANSISDataSet50.EO_ALANSIS_ERIKURETIMRAPORDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As ALANSISDataSet50, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As ALANSISDataSet50, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As ALANSISDataSet50, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As ALANSISDataSet50) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager bağlantı bilgisi içermiyor. TableAdapterManager TableAdapter "& _ 
                        "özelliklerinin her birini geçerli bir TableAdapter örneğine ayarlayın.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("İşlem başlatılamıyor. Geçerli veri bağlantısı işlemleri desteklemiyor veya geçerl"& _ 
                        "i durum işlemin başlatılmasına izin vermiyor.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
